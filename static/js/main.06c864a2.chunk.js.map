{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/NweetFactory.js","components/Modal.js","components/Nweet.js","components/Logout.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","authService","dbService","storageService","firebaseInstance","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","e","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","event","attachmentUrl","attachementRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","nweetFile","text","creatorName","displayName","creatorId","createdAt","Date","now","collection","add","maxLength","htmlFor","faPlus","id","accept","theFile","files","reader","FileReader","onloadend","finished","result","currentTarget","readAsDataURL","opacity","src","backgroundImage","alt","faTimes","Modal","props","showing","setShowing","width","height","children","Nweet","nweetObj","isOwner","editing","setEditing","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","delete","refFromURL","toggleEditing","update","faSearchPlus","faTrash","faPencilAlt","Logout","history","useHistory","signOut","push","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","Profile","refreshUser","newDisplayName","setNewDisplayName","length","updateProfile","alert","autoFocus","minLength","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06c864a2.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\"\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\nexport const firebaseInstance = firebase;","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (e) => {\n    const {\n      target: { name, value },\n    } = e;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          className=\"authInput\"\n          name=\"email\"\n          value={email}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n        />\n        <input\n          className=\"authInput\"\n          name=\"password\"\n          value={password}\n          onChange={onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n        />\n        <input\n          className=\"authInput authSubmit\"\n          type=\"submit\"\n          value={newAccount ? \"Sign up\" : \"Log in\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span className=\"authSwitch\" onClick={toggleAccount}>\n        {newAccount ? \"Log in\" : \"Sign up\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport AuthForm from 'components/AuthForm'\n\nconst Auth = () => {\n  const onSocialClick = async(e) => {\n    const {\n      target: { name },\n    } = e;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider()\n    }\n    await authService.signInWithPopup(provider)\n  };\n  \n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n      icon={faTwitter}\n      color={\"#04AAFF\"}\n      size=\"3x\"\n      style={{ marginBottom: 30 }}\n      />\n      <AuthForm/>\n        <div className=\"authBtns\">\n          <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n            Continue with Google <FontAwesomeIcon icon={faGoogle} />\n          </button>\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n            Continue with Github <FontAwesomeIcon icon={faGithub} />\n          </button>\n        </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachementRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachementRef.putString(attachment, \"data_url\");\n      // console.log(await response.ref.getDownloadURL()) = deployed url\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetFile = {\n      text: nweet,\n      creatorName: userObj.displayName,\n      creatorId: userObj.uid,\n      createdAt: Date.now(),\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetFile);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (e) => {\n    // console.log(e.target.files);\n    const {\n      target: { files },\n    } = e;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finished) => {\n      // console.log(finished.currentTarget.result) = local url\n      const {\n        currentTarget: { result },\n      } = finished;\n      setAttachment(result);\n    };\n    if (theFile) {\n      reader.readAsDataURL(theFile);\n    }\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n          <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Tweet with a photo</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n        <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n        />\n        {attachment && (\n        <div className=\"factoryForm__attachment\">\n        <img\n          src={attachment}\n          style={{\n            backgroundImage: attachment,\n          }}\n          alt=\"new attachment\"\n        />\n        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n          <span>Remove</span>\n          <FontAwesomeIcon icon={faTimes} />\n        </div>\n          </div>\n        )}\n      </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useState } from \"react\";\n\n\nconst Modal = (props) => {\n  const [showing, setShowing] = useState(true);\n\n  const toggleShowing = () => {\n    setShowing((prev) => !prev); // toggling editing mode.\n  };\n\n  return (\n    <div\n      style={{\n        width:  showing ? \"50%\":\"100%\",\n        height:  showing ? \"50%\": \"100%\",\n      }}\n      onClick={toggleShowing}\n      className=\"nweet__img__modal\"\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Modal;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrash,\n  faPencilAlt,\n  faSearchPlus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Modal from \"./Modal\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false); // default mode is false.\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Do you want to delete this message?\");\n    if (ok) {\n        //drop the document from firestore collection\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n        //drop file from firebase storage\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => {\n    setEditing((prev) => !prev); // toggling editing mode.\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false); // ending editing state.\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewNweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? ( //if user clicks edit button and toggle to editing state true, following will show up.\n        <>\n          {isOwner && ( //double-check if editing person is the owner.\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Edit your message\"\n                  value={newNweet}\n                  onChange={onChange}\n                  required\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h3>{nweetObj.creatorName}</h3>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <Modal>\n              <img src={nweetObj.attachmentUrl} alt=\"post_image\" />\n              <FontAwesomeIcon icon={faSearchPlus} />\n            </Modal>\n          )}\n          {isOwner && ( //only if user is the owner, they will see the buttons\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Logout = () => {\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\"); //after signout, redirect to root url(home)\n  };\n  return (\n    <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n      Log out\n    </span>\n  );\n};\n\nexport default Logout;\n","import React, { useEffect, useState } from \"react\";\nimport NweetFactory from \"components/NweetFactory\";\nimport Nweet from \"components/Nweet\";\nimport { dbService } from \"fbase\";\nimport Logout from \"components/Logout\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    //onSnapshot is a listener, available to realtime.\n    dbService.collection(\"nweets\").onSnapshot((snapshot) =>  {\n      const nweetArray = snapshot.docs.map(doc =>({id:doc.id, ...doc.data(),}))\n      setNweets(nweetArray)\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Logout />\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Navigation = ({userObj}) => {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n            <Link to=\"/\" style={{ marginRight: 10 }}>\n              <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n            </Link>\n        </li>\n        <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}'s Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import Logout from \"components/Logout\";\n// import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Profile = ({refreshUser, userObj}) => {\n\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  \n  // const getMyNweets = async() =>{\n  //   //get this one more powerful using different args for where()\n  //   const nweets = await dbService.collection(\"nweets\").where(\"creatorId\",\"==\",userObj.uid).orderBy(\"createdAt\").get() \n  //   //error will tell you do create indexes for thie query.\n  //   console.log(nweets.docs.map((doc)=>doc.data()))\n  // }\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (newDisplayName.length > 1 && userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    } else if(newDisplayName.length < 1) {\n      alert(\"New display name is too short.\")\n    } else if(userObj.displayName === newDisplayName) {\n      alert(\"You can't change to the same display name.\")\n    }\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  useEffect(() => {\n    // getMyNweets()\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          className=\"formInput\"\n          autoFocus\n          onChange={onChange}\n          value={newDisplayName}\n          type=\"text\"\n          placeholder=\"Display Name\"\n          required\n          minLength=\"1\"\n          maxLength=\"15\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <Logout />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth.js\";\nimport Home from \"routes/Home.js\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\n//passing userObj properties from App.js where handling authstatus to Home page so that user can use userObj.id and userObj.uid\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj}/>}\n      <Switch>\n      <>\n        {isLoggedIn ? (\n            <div style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}>\n            <Route exact path=\"/\">\n              <Home userObj={userObj}  />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser}/>\n            </Route>\n            </div>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import AppRouter from \"components/Router\";\nimport React, { useEffect, useState } from \"react\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? ( //if userObj is existed, indicates you are logged in\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Fire Base is Initializing...\"\n      )}\n      {/* <footer>footer</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render( \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}